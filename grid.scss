$total-columns: 12;
$gutter: 1.2rem; // 12px

$breakpointList: xs s m l xl;

@mixin breakpoint($point) {
	@if $point == xl {
		@media screen and (min-width: 1441px) { @content ; }
	}
	@else if $point == l {
		@media screen and (min-width: 1025px) and (max-width: 1440px) { @content ; }
	}
	@else if $point == m {
		@media screen and (min-width: 768px) and (max-width: 1024px) { @content ; }
	}
	@else if $point == s {
		@media screen and (min-width: 360px) and (max-width: 767px) { @content ; }
	}
	@else if $point == xs {
		@media only screen and (max-width: 359px)  { @content ; }
	}
}

@mixin breakpointMin($point) {
	@if $point == xl {
		@media screen and (min-width: 1441px) { @content ; }
	}
	@else if $point == l {
		@media screen and (min-width: 1025px) { @content ; }
	}
	@else if $point == m {
		@media screen and (min-width: 768px) { @content ; }
	}
	@else if $point == s {
		@media screen and (min-width: 360px) { @content ; }
	}
	@else if $point == xs {
		@media only screen and (min-width: 0)  { @content ; }
	}
}

.row {
	margin: 0 auto;
	display: flex;
	flex-wrap: wrap;
	padding: 0;

	@include breakpoint(xl) {
		width: 100%;
		max-width: 160rem;
	}
	@include breakpoint(l) {
		width: 100%;
		max-width: 126rem;
	}
	@include breakpoint(m) {
		width: 100%;
	}
	@include breakpoint(s) {
		width: 100%;
	}
	@include breakpoint(xs) {
		width: 100%;
	}
}

/* generate columns */
@each $breakpoint in $breakpointList {
	@include breakpointMin(#{$breakpoint}) {
		@for $i from $total-columns through 1 {
		    .#{$breakpoint}#{$i} {
		    	padding: 0 $gutter;
		    	flex: 0 0 (100% / $total-columns) * $i;
		        box-sizing: border-box;
		    }
		}
	}
}

/* order on breakpoint */
@each $breakpoint in $breakpointList {
	@include breakpoint(#{$breakpoint}) {
		@for $i from $total-columns through 1 {
		    .#{$breakpoint}-order-#{$i} {
		    	order: #{$i};
		    }
		}
	}
}


/* generic column */
@each $breakpoint in $breakpointList {
	@include breakpointMin(#{$breakpoint}) {
	    .#{$breakpoint} {
	    	padding: 0 $gutter;
	    	box-sizing: border-box;
	    	flex-grow: 1;
	    }
	}
}

/* generate offsets */
@each $breakpoint in $breakpointList {
	@include breakpointMin(#{$breakpoint}) {
		@for $i from ($total-columns - 1) through 1 {
		    .#{$breakpoint}-offset#{$i} {
		    	margin-left: (100% / $total-columns) * $i;
		    }
		}
	}
}
